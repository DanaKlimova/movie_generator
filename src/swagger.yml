swagger: "2.0"
info:
  description: This is the swagger file that goes with our server code
  version: "1.0.0"
  title: Swagger REST Article
consumes:
  - "application/json"
produces:
  - "application/json"

basePath: "/"

# Paths supported by the server application
paths:
  /movies:
    get:
      operationId: "api.movies.get_list"
      tags:
        - "Movies"
      summary: "The movies data structure supported by the server application"
      description: "Read the list of movies"
      responses:
        200:
          description: "Successful read movie list operation"
          schema:
            type: "array"
            items:
              properties:
                id:
                  type: "string"
                name:
                  type: "string"
                year:
                  type: "string"
    post:
      operationId: "api.movies.post"
      tags:
        - "Movies"
      summary: "Add a movie to the movies list"
      description: "Add a new movie in the list of movies"
      parameters:
        - name: data
          in: body
          description: "Movie to add"
          required: True
          schema:
            type: object
            properties:
              name:
                type: string
                description: "Name of movie to create"
              year:
                type: string
                description: "Year of movie to create"
      responses:
        201:
          description: Successfully add movie in list
  /movies/{id}:
    get:
      operationId: "api.movies.get"
      tags:
        - "Movies"
      summary: "Read one movie from the movies list"
      description: "Read one movie from the movies list"
      parameters:
        - name: id
          in: path
          description: "ID of the movie to get from the list"
          type: string
          required: True
      responses:
        200:
          description: "Successfully read movie from movies list operation"
          schema:
            properties:
              name:
                type: string
              year:
                type: string
    put:
      operationId: "api.movies.update"
      tags:
        - "Movies"
      summary: "Update a movie in the movies list"
      description: "Update a movie in the movies list"
      parameters:
        - name: id
          in: path
          description: "ID of the movie to update in the list"
          type: string
          required: True
        - name: data
          in: body
          schema:
            type: object
            properties:
              name:
                type: string
              year:
                type: string
      responses:
        200:
          description: "Successfully updated movie in movies list"

    delete:
      operationId: "api.movies.delete"
      tags:
        - "Movies"
      summary: "Delete a movie from the movies list"
      description: "Delete a movie"
      parameters:
        - name: id
          in: path
          type: string
          required: True
      responses:
        200:
          description: "Successfully deleted a movie from movies list"